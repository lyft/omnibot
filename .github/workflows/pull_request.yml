on: pull_request
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files
  license-check:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Ruby 2.x
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2
      - name: Install license finder
        run: gem install license_finder
      - name: Allow gevent Zope license
        run: license_finder permitted_licenses add "Zope Public License"
      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install apt dependencies
        run: sudo apt-get update -y && sudo apt-get install -y python3-dev openssl libssl-dev gcc pkg-config libffi-dev libxml2-dev libxmlsec1-dev
      - name: Install dependencies
        run: pip install -r piptools_requirements.txt && pip install -r requirements.txt
      - name: Run license finder
        run: license_finder
  build-docs:
    name: Build and publish docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install virtualenv
        run: pip install virtualenv
      - name: Build docs
        run: make build_docs
      - name: Remove docs folder, so github will ignore it
        run: rm -rf docs
  build--docker-image:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@2.8
        with:
          name: lyft/omnibot
          no_push: true
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install apt dependencies
        run: sudo apt-get update -y && sudo apt-get install -y python3-dev openssl libssl-dev gcc pkg-config libffi-dev libxml2-dev libxmlsec1-dev
      - name: Install dependencies
        run: pip install -r piptools_requirements.txt && pip install -r requirements.txt
      - name: Run tests
        run: make test
